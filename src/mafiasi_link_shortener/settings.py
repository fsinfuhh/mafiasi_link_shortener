"""
Django settings for mafiasi_link_shortener project.

Generated by "django-admin startproject" using Django 3.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
from configurations import Configuration, values
from django_auth_mafiasi.configuration import BaseAuthConfigurationMixin, DevAuthConfigurationMixin

# Build paths inside the project like this: BASE_DIR / "subdir".
BASE_DIR = Path(__file__).resolve().parent.parent


class Base(BaseAuthConfigurationMixin, Configuration):
    # Application definition
    INSTALLED_APPS = [
                         "django.contrib.admin",
                         "django.contrib.auth",
                         "django.contrib.contenttypes",
                         "django.contrib.sessions",
                         "django.contrib.messages",
                         "django.contrib.staticfiles",
                         "rest_framework",
                         "drf_spectacular",
                         "links",
                         "api",
                     ] + BaseAuthConfigurationMixin.MAFIASI_AUTH_APPS

    MIDDLEWARE = [
        "django.middleware.security.SecurityMiddleware",
        "whitenoise.middleware.WhiteNoiseMiddleware",
        "django.contrib.sessions.middleware.SessionMiddleware",
        "django.middleware.cache.UpdateCacheMiddleware",
        "django.middleware.common.CommonMiddleware",
        "django.middleware.cache.FetchFromCacheMiddleware",
        "django.middleware.csrf.CsrfViewMiddleware",
        "django.contrib.auth.middleware.AuthenticationMiddleware",
        "django.contrib.messages.middleware.MessageMiddleware",
        "django.middleware.clickjacking.XFrameOptionsMiddleware",
    ]

    ROOT_URLCONF = "mafiasi_link_shortener.urls"

    TEMPLATES = [
        {
            "BACKEND": "django.template.backends.django.DjangoTemplates",
            "DIRS": [],
            "APP_DIRS": True,
            "OPTIONS": {
                "context_processors": [
                    "django.template.context_processors.debug",
                    "django.template.context_processors.request",
                    "django.contrib.auth.context_processors.auth",
                    "django.contrib.messages.context_processors.messages",
                ],
            },
        },
    ]

    WSGI_APPLICATION = "mafiasi_link_shortener.wsgi.application"

    # Database
    # https://docs.djangoproject.com/en/3.1/ref/settings/#databases

    @property
    def DATABASES(self):
        return {
            "default": {
                "ENGINE": "django.db.backends.postgresql_psycopg2",
                "HOST": self.DB_HOST,
                "PORT": self.DB_PORT,
                "USER": self.DB_USER,
                "PASSWORD": self.DB_PASSWORD,
                "NAME": self.DB_NAME,
            }
        }

    @property
    def CACHES(self):
        return {
            "default": {
                "BACKEND": "django.core.cache.backends.locmem.LocMemCache" if not self.DEBUG else "django.core.cache.backends.dummy.DummyCache"
            }
        }

    # Internationalization
    # https://docs.djangoproject.com/en/3.1/topics/i18n/

    LANGUAGE_CODE = "en-us"

    TIME_ZONE = "Europe/Berlin"

    USE_I18N = True

    USE_L10N = True

    USE_TZ = True

    # Static files (CSS, JavaScript, Images)
    # https://docs.djangoproject.com/en/3.1/howto/static-files/

    STATIC_URL = "/static/"
    STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"
    WHITENOISE_ROOT = BASE_DIR / "mafiasi_link_shortener" / "root_static"

    LOGIN_REDIRECT_URL = "swagger-ui"
    LOGIN_URL = "/auth/"

    VERSION = "0.1.0"

    # rest framework
    REST_FRAMEWORK = {
        "DEFAULT_AUTHENTICATION_CLASSES": [
            "rest_framework.authentication.SessionAuthentication",
            "django_auth_mafiasi.django_rest_framework.authentication.OpenIdAccessTokenAuthentication",
        ],
        "DEFAULT_PERMISSION_CLASSES": [
            "rest_framework.permissions.IsAuthenticated",
        ],
        "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
        "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.LimitOffsetPagination",
        "PAGE_SIZE": 100,
    }

    # openapi schema settings
    # todo add oidc connect authorization documentation
    SPECTACULAR_SETTINGS = {
        "TITLE": "Mafiasi Link Shortener",
        "CONTACT": {
            "name": "Server-Ag",
            "email": "ag-server@informatik.uni-hamburg.de",
        },
        "VERSION": VERSION,
        "LICENSE": {
            "name": "MIT",
            "url": "https://github.com/fsinfuhh/mafiasi_link_shortener/blob/master/LICENSE",
        },

        "SCHEMA_PATH_PREFIX": r"/api/",
        "COMPONENT_SPLIT_PATCH": True,
        "COMPONENT_SPLIT_REQUEST": True,
    }

    # Configurable properties
    SECRET_KEY = values.SecretValue()
    DEBUG = values.BooleanValue(default=False)
    ALLOWED_HOSTS = values.ListValue(environ_required=True)
    DB_HOST = values.Value(environ_required=True)
    DB_PORT = values.Value(default=5432)
    DB_USER = values.Value(default="mafiasi_link_shortener")
    DB_PASSWORD = values.SecretValue()
    DB_NAME = values.Value(default="mafiasi_link_shortener")
    LINK_SHORT_LENGTH = values.IntegerValue(default=6)
    STATIC_ROOT = values.PathValue(default=BASE_DIR.parent / "static")


class Dev(DevAuthConfigurationMixin, Base):
    SECRET_KEY = values.Value(default="DEV ONLY! DONT USE IN PRODUCTION")
    DEBUG = values.BooleanValue(default=True)
    ALLOWED_HOSTS = values.ListValue(default=["localhost", "127.0.0.1"])
    DB_HOST = values.Value(default="localhost")
    DB_PASSWORD = values.Value(default="mafiasi_link_shortener")

    INSTALLED_APPS = ["whitenoise.runserver_nostatic"] + Base.INSTALLED_APPS + ["debug_toolbar"]
    MIDDLEWARE = Base.MIDDLEWARE + ["debug_toolbar.middleware.DebugToolbarMiddleware"]
    INTERNAL_IPS = [
        "127.0.0.1"
    ]

    WHITENOISE_AUTOREFRESH = True


class Prod(Base):
    pass
